"""Refactored old models, added new models

Revision ID: 0858619addb7
Revises: bb8d2509e68e
Create Date: 2024-07-28 23:05:50.089230

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0858619addb7'
down_revision: Union[str, None] = 'bb8d2509e68e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('manufacturer',
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_manufacturer_uuid'), 'manufacturer', ['uuid'], unique=True)

    op.create_table('user',
    sa.Column('first_name', sa.String(length=150), nullable=False),
    sa.Column('middle_name', sa.String(length=150), nullable=True),
    sa.Column('last_name', sa.String(length=150), nullable=False),
    sa.Column('username', sa.String(length=150), nullable=False),
    sa.Column('phone_number', sa.String(length=13), nullable=True),
    sa.Column('email', sa.String(length=254), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('avatar', sa.String(length=2048), nullable=True),
    sa.Column('user_type', sa.String(length=9), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('last_online', sa.DateTime(), nullable=True),
    sa.Column('is_online', sa.Boolean(), nullable=True),
    sa.Column('count_all_advertisements', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_user_uuid'), 'user', ['uuid'], unique=True)

    op.create_table('vehicle_type',
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vehicle_type_uuid'), 'vehicle_type', ['uuid'], unique=True)

    op.create_table('model',
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('production_start_year', sa.DateTime(), nullable=True),
    sa.Column('production_end_year', sa.DateTime(), nullable=True),
    sa.Column('is_still_in_production', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['manufacturer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_model_uuid'), 'model', ['uuid'], unique=True)

    op.create_table('user_rating',
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('user_to_id', sa.Integer(), nullable=False),
    sa.Column('user_from_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_from_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_to_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_rating_uuid'), 'user_rating', ['uuid'], unique=True)

    op.create_table('vehicle_body_type',
    sa.Column('vehicle_type_id', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['vehicle_type_id'], ['vehicle_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vehicle_body_type_uuid'), 'vehicle_body_type', ['uuid'], unique=True)

    op.create_table('advertisement',
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('vehicle_type_id', sa.Integer(), nullable=False),
    sa.Column('vehicle_body_type_id', sa.Integer(), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('transmission', sa.String(length=1), nullable=False),
    sa.Column('drive', sa.String(length=1), nullable=False),
    sa.Column('fuel', sa.String(length=1), nullable=False),
    sa.Column('mileage', sa.Integer(), nullable=False),
    sa.Column('production_year', sa.Integer(), nullable=False),
    sa.Column('color', sa.String(length=1), nullable=False),
    sa.Column('description', sa.String(length=5000), nullable=False),
    sa.Column('registration_country_id', sa.Integer(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('area_id', sa.Integer(), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('vin', sa.String(length=17), nullable=True),
    sa.Column('vin_presence', sa.Boolean(), nullable=False),
    sa.Column('was_in_accident', sa.Boolean(), nullable=False),
    sa.Column('bargain', sa.Boolean(), nullable=False),
    sa.Column('exchange', sa.Boolean(), nullable=False),
    sa.Column('condition', sa.String(length=1), nullable=False),
    sa.Column('manufacture_country_id', sa.Integer(), nullable=True),
    sa.Column('fuel_consumption', sa.Float(), nullable=False),
    sa.Column('engine_volume', sa.Float(), nullable=False),
    sa.Column('engine_power', sa.Integer(), nullable=False),
    sa.Column('headlights', sa.String(length=1), nullable=True),
    sa.Column('interior_material', sa.String(length=1), nullable=True),
    sa.Column('seat_adjustment', sa.String(length=1), nullable=True),
    sa.Column('steering_wheel_adjustment', sa.String(length=1), nullable=True),
    sa.Column('power_steering', sa.String(length=1), nullable=True),
    sa.Column('heated_seats', sa.Boolean(), nullable=False),
    sa.Column('heated_steering_wheel', sa.Boolean(), nullable=False),
    sa.Column('heated_windshield', sa.Boolean(), nullable=False),
    sa.Column('heated_rear_windshield', sa.Boolean(), nullable=False),
    sa.Column('seat_ventilation', sa.Boolean(), nullable=False),
    sa.Column('conditioner', sa.Boolean(), nullable=False),
    sa.Column('window_lifters', sa.Boolean(), nullable=False),
    sa.Column('configuration', sa.String(length=1), nullable=False),
    sa.Column('count_owners', sa.Integer(), nullable=False),
    sa.Column('price_uah', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('price_usd', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('price_eur', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['area_id'], ['area.id'], ),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['city_id'], ['city.id'], ),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.ForeignKeyConstraint(['manufacture_country_id'], ['country.id'], ),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['manufacturer.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['model.id'], ),
    sa.ForeignKeyConstraint(['registration_country_id'], ['country.id'], ),
    sa.ForeignKeyConstraint(['vehicle_body_type_id'], ['vehicle_body_type.id'], ),
    sa.ForeignKeyConstraint(['vehicle_type_id'], ['vehicle_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_advertisement_uuid'), 'advertisement', ['uuid'], unique=True)

    op.create_table('advertisement_favourite',
    sa.Column('advertisement_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['advertisement_id'], ['advertisement.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_advertisement_favourite_uuid'), 'advertisement_favourite', ['uuid'], unique=True)

    op.create_table('advertisement_media',
    sa.Column('advertisement_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('mimetype', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['advertisement_id'], ['advertisement.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_advertisement_media_uuid'), 'advertisement_media', ['uuid'], unique=True)

    op.drop_column('area', 'is_deleted')
    op.drop_column('city', 'is_deleted')
    op.drop_column('country', 'is_deleted')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('country', sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('city', sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('area', sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_advertisement_media_uuid'), table_name='advertisement_media')
    op.drop_table('advertisement_media')
    op.drop_index(op.f('ix_advertisement_favourite_uuid'), table_name='advertisement_favourite')
    op.drop_table('advertisement_favourite')
    op.drop_index(op.f('ix_advertisement_uuid'), table_name='advertisement')
    op.drop_table('advertisement')
    op.drop_index(op.f('ix_vehicle_body_type_uuid'), table_name='vehicle_body_type')
    op.drop_table('vehicle_body_type')
    op.drop_index(op.f('ix_user_rating_uuid'), table_name='user_rating')
    op.drop_table('user_rating')
    op.drop_index(op.f('ix_model_uuid'), table_name='model')
    op.drop_table('model')
    op.drop_index(op.f('ix_vehicle_type_uuid'), table_name='vehicle_type')
    op.drop_table('vehicle_type')
    op.drop_index(op.f('ix_user_uuid'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_manufacturer_uuid'), table_name='manufacturer')
    op.drop_table('manufacturer')
    # ### end Alembic commands ###
